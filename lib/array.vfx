%obj kind: %array
    var len var buf var cap
;kind

\ to add to a "collection" interface...
\ key/value thingies... string keys being z-term...
: set  [[ dup len @ >= abort" set: Index out of range!" cells buf @ + ! ]] ;
: get  [[ dup len @ >= abort" set: Index out of range!" cells buf @ + @ ]] ;
: length  -> len @ ;

: array ( n -- <name> )
    create %array static, here buf ! dup len ! dup cap ! cells allot&erase ;

%array m: (clear)  buf @ len @ cells erase ;

%array m: (each)
    len @ 0= if exit then
    buf @ len @ cells bounds do  >r i @ [[ r@ execute ]] r>  cell +loop  drop ;

\ ------------------------------------------------------------------------------

%array kind: %stack
;kind

: stack ( n -- <name> )
    create %stack static, here buf ! dup cap ! cells allot&erase ;

%stack m: (push)  1 len +!  len @ 1 - me set  ;
%stack m: (clear)  0 len ! ;