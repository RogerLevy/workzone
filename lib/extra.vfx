\ ------------------------------------------------------------------------------

: ,,  0 do dup , loop drop ;

\ ------------------------------------------------------------------------------
\ from rat.vfx:

0e fvalue flen
: fuvec ( f: deg -- f: x y )  deg>rad fdup fcos fswap fsin ;
: fvec  ( f: deg len -- f: x y )  to flen  fuvec  flen f* fswap flen f* fswap ;

: mheld?  ms0 ALLEGRO_MOUSE_STATE.buttons @ and 0<> ;
: mdelta  dup mheld? 1 and  swap ms1 ALLEGRO_MOUSE_STATE.buttons @ and 0<>
    1 and - ;
: mpressed?  mdelta 1 = ;
: mletgo?  mdelta -1 = ;

: deg>rad  0.01745329e f* ;

0e fvalue ftemp

: rblit ( flags bmp f: angle - )
    to ftemp  dup bmpwh swap 2 / s>f 2 / s>f  at@f
    ftemp deg>rad  swap al_draw_rotated_bitmap ;

: 2+  rot + >r + r> ;

: zoom/  2 / >r 2 / r> ;

0 value sfx
: play-doubled  dup to sfx just-play-sample
    0.04e timer>  sfx just-play-sample ;
    
method bbox ( - x y w h )

%actor m: bbox  x v@ w v@ 2over 2+ ;

: clicked?  1 mpressed?  mouse zoom/ bbox inside? and ;  

: move-simple  vx fv@ 2delta* x fv+! ;

: -exit  s" 0= if exit then " evaluate ; immediate
: ?exit  s" if exit then" evaluate ; immediate

\ ------------------------------------------------------------------------------

create fgc  1e sf, 1e sf, 1e sf, 1e sf, 
variable font

: f@+  dup sf@ cell+ ;
: f!-  dup sf! cell- ;
: fgc@  fgc f@+ f@+ f@+ f@+ drop ;
: fgc!  fgc 3 cells + f!- f!- f!- f!- drop ;

: text  ( zaddr - ) >r  font @  fgc@  at@f  0 r> al_draw_text ;

variable (f)
: f>i  (f) sf!  (f) @ ;

: rect  at@f  swap s>f s>f  1e f>i  fgc@  al_draw_rectangle ;
: rectf  at@f  swap s>f s>f  fgc@  al_draw_filled_rectangle ;

: white  1e 1e 1e 1e fgc! ;
: black  0e 0e 0e 1e fgc! ;

: strwidth  font @ swap al_get_text_width ;
: fontheight  font @ al_get_font_line_height ;

